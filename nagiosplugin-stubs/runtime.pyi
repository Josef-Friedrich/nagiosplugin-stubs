def guarded(original_function=..., verbose: bool = ...): ...

class Runtime:
    instance = ...
    check = ...
    _verbose = ...
    timeout: int = ...
    logchan = ...
    output = ...
    stdout = ...
    exitcode: int = ...
    def __new__(cls): ...
    def __init__(self) -> None: ...
    @property
    def verbose(self) -> int: ...
    @verbose.setter
    def verbose(self, verbose: int) -> None: ...
    def run(self, check): ...
    def execute(self, check, verbose: bool = ..., timeout: int = ...): ...
    def sysexit(self): ...
