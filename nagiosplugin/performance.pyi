"""
This type stub file was generated by pyright.
"""

import collections

"""
Performance data (perfdata) representation.

:term:`Performance data` are created during metric evaluation in a context
and are written into the *perfdata* section of the plugin's output.
:class:`Performance` allows the creation of value objects that are passed
between other nagiosplugin objects.

For sake of consistency, performance data should represent their values in
their respective base unit, so `Performance('size', 10000, 'B')` is better
than `Performance('size', 10, 'kB')`.
"""

def zap_none(val): ...
def quote(label): ...

class Performance(
    collections.namedtuple(
        "Performance", ["label", "value", "uom", "warn", "crit", "min", "max"]
    )
):
    def __new__(
        cls, label, value, uom=..., warn=..., crit=..., min=..., max=...
    ):  # -> Self@Performance:
        """Create new performance data object.

        :param label: short identifier, results in graph
            titles for example (20 chars or less recommended)
        :param value: measured value (usually an int, float, or bool)
        :param uom: unit of measure -- use base units whereever possible
        :param warn: warning range
        :param crit: critical range
        :param min: known value minimum (None for no minimum)
        :param max: known value maximum (None for no maximum)
        """
        ...
    def __str__(self) -> str:
        """String representation conforming to the plugin API.

        Labels containing spaces or special characters will be quoted.
        """
        ...
